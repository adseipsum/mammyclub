<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * TyBroadcastManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class TyBroadcastManager extends BaseManager {

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "subject" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "email_main_text" => array("type" => "tinymce", "class" => "required", "attrs" => array("maxlength" => 65536)));

  /** List params. */
  public $listParams = array("name");


  /**
   * @param $siteOrderId
   * @return array
   */
  public function sendBySiteOrder($siteOrderId) {
    $siteOrder = ManagerHolder::get('SiteOrder')->getById($siteOrderId, 'e.*');
    if (empty($siteOrder)) {
      return array('status' => 'error', 'msg' => 'Заказ не найден');
    }

    if ($siteOrder['request_review']) {
      return array('status' => 'error', 'msg' => 'Письмо "Спасибо за покупку" уже отправлено');
    }

    $broadcast = ManagerHolder::get('TyBroadcast')->getAll('e.*');
    if (empty($broadcast)) {
      return array('status' => 'error', 'msg' => 'Рассылка найдена');
    }
    $broadcast = $broadcast[0];

    $user = ManagerHolder::get('User')->getById($siteOrder['user_id'], 'e.*, auth_info.*, pregnancyweek_current.*');
    if (empty($user)) {
      return array('status' => 'error', 'msg' => 'Пользователь не найден');
    }
    $user['name'] = $siteOrder['first_name'];

    $CI = &get_instance();
    $CI->load->helper('project');

    // Create MandrillBroadcast
    $broadcastData = array(
      'subject' => $broadcast['subject'],
      'text' => '',
      'recipients_count' => 1,
      'read_count' => 0,
      'link_visited_count' => 0,
      'created_at' => date(DOCTRINE_DATE_FORMAT),
      'type' => TY_BROADCAST
    );

    $broadcastId = ManagerHolder::get('MandrillBroadcast')->insert($broadcastData);

    // Collect data to array
    $viewData = ManagerHolder::get('TyBroadcast')->createFirstYearBroadcastContent($broadcast, $user);

    // Save Broadcast Links
    foreach ($viewData as $data) {
      if (!empty($data)) {
        ManagerHolder::get('MandrillBroadcast')->saveBroadcastLinks($data, $broadcastId);
      }
    }

    // Insert recipient data
    $userData = array('email' => $siteOrder['email'],
      'user_id' => $user['id'],
      'is_read' => 0,
      'is_send' => 0,
      'data' => serialize($user),
      'broadcast_id' => $broadcastId,
      'updated_at' => date(DOCTRINE_DATE_FORMAT));
    $recipientId = ManagerHolder::get('MandrillBroadcastRecipient')->insert($userData);

    try {
      $metaData = array(
        'broadcast_id' => $broadcastId,
        'recipient_id' => $recipientId
      );
      ManagerHolder::get('EmailMandrill')->setMetadata($metaData);
      ManagerHolder::get('EmailMandrill')->sendTemplate($userData['email'], 'ty_broadcast/view', $viewData, $viewData['subject']);
      log_message('debug', '[send_ty_broadcast_single] - Email sent to ' . $userData['email'] . '; Subject: ' . $viewData['subject']);

      ManagerHolder::get('MandrillBroadcast')->updateById($broadcastId, 'sent_date', date(DOCTRINE_DATE_FORMAT));
      ManagerHolder::get('SiteOrder')->updateById($siteOrder['id'], 'request_review', TRUE);
    } catch (Exception $e) {
      log_message('error', '[send_ty_broadcast_single] - Broadcast send error:' . $e->getMessage() . '; on email: ' . $user['auth_info']['email']);
    }

    ManagerHolder::get('EmailNotice')->sendNoticeAboutBroadcastEnd(TY_BROADCAST, 1);

    return array('status' => 'ok');
  }

  /**
   * Create first year broadcast content
   * @param array $broadcast
   * @param array $user
   * @return array
   */
  public function createFirstYearBroadcastContent($broadcast, $user) {

    $viewData = array();
    $viewData['subject'] = !empty($broadcast['subject']) ? $broadcast['subject'] : '';
    $viewData['email_main_text'] = !empty($broadcast['email_main_text']) ? $broadcast['email_main_text'] : '';

    $ci = &get_instance();
    $ci->load->helper('project_broadcast');

    // Process products based on user data
    $products = array();
    $showcaseProducts = ManagerHolder::get('Showcase')->getShowcaseProducts($user);
    if(!empty($showcaseProducts)) {
      foreach ($showcaseProducts as $product) {
        $url = shop_url($product['page_url']);
        if (substr($url, -1) == '/') {
          $url = substr($url, 0 , -1);
        }
        $product['url_with_login_key'] = $url . '?' . LOGIN_KEY . '=' . $user['login_key'];
        $product['url_for_buy_button'] = $url . '?' . LOGIN_KEY . '=' . $user['login_key'] . '&' . REDIRECT_TO_CART_KEY . '=1';
        $products[] = $product;
      }
    }

    // Proccess data
    foreach ($viewData as &$data) {
      if (!empty($data)) {
        if(!empty($products)) {
          $data = ManagerHolder::get('ProductBroadcast')->process_product_broadcast_showcase($data, $products, $user);
        }
        // ------- Process $googleAnalData -------------------
        $googleAnalData = array('utm_source'   => 'thanks_purchase',
                                'utm_medium'   => 'email',
                                'utm_campaign' => 'LAP');
        // ----------------------------------------------------
        ManagerHolder::get('MandrillBroadcast')->addLoginKeyToLink($data, $user['login_key'], $googleAnalData);
        kprintfLettersContent($user, $data);
      }
    }

    return $viewData;
  }

}