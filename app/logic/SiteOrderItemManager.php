<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * SiteOrderItemManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class SiteOrderItemManager extends BaseManager {

  /** Name field. */
  protected $nameField = "id";


  /** Fields. */
  public $fields = array("siteorder" => array("type" => "select", "relation" => array("entity_name" => "SiteOrder")),
                         "product" => array("type" => "select", "relation" => array("entity_name" => "Product")),
                         "parameter_group" => array("type" => "select", "relation" => array("entity_name" => "ParameterGroup")),
                         "additional_product_params" => array("type" => "tinymce", "attrs" => array("maxlength" => 65536)),
                         "qty" => array("type" => "input_integer"),
                         "zammler_inventory_qty" => array("type" => "input_integer"),
                         "other_stores_inventory_qty" => array("type" => "input_integer"),
                         "price" => array("type" => "input_integer"),
                         "discount_price" => array("type" => "input_integer"),
                         "item_total" => array("type" => "input_integer"),
                         "sale" => array("type" => "select", "relation" => array("entity_name" => "Sale")));

  /** List params. */
  public $listParams = array("siteorder.name", "product.name", "parameter_group.name", "qty", "zammler_inventory_qty", "other_stores_inventory_qty", "price", "discount_price", "item_total", "sale.name");

	/**
	 * PreProcessWhereQuery.
	 * OVERRIDE THIS METHOD IN A SUBCLASS TO ADD joins and other stuff.
	 * @param Doctrine_Query $query
	 * @return Doctrine_Query
	 */
	protected function preProcessWhereQuery($query, $pref, $what = '*') {
		$query = parent::preProcessWhereQuery($query, $pref, $what);

		if (strpos($what, 'product.') !== FALSE || $what == '*') {
			$query->addSelect("product_category.*")->leftJoin("product.category product_category");
		}

		return $query;
	}

	/**
	 * PostInsert.
	 * OVERRIDE THIS METHOD IN A SUBCLASS.
	 *
	 * @param array $entity
	 */
	protected function postInsert($entity) {
		$siteOrderItem = ManagerHolder::get('SiteOrderItem')->getById($entity['id']);
		$productName = ManagerHolder::get('Product')->getById($siteOrderItem['product_id'], 'name');
		$parameterName = ManagerHolder::get('ParameterValue')->getById($siteOrderItem['parameter_group']['main_parameter_value_id'], 'e.*');

		Events::trigger('SiteOrder.itemAction', array(
			'id' => $siteOrderItem['siteorder_id'],
			'action' => 'Добавлен',
			'product_name' => $productName['name'],
			'parameter_id' => $parameterName['id'],
			'parameter_name' => $parameterName['name'],
			'qty' => $siteOrderItem['qty'],
			'date' => date(DOCTRINE_DATE_FORMAT),
			'price' => $siteOrderItem['price']
		));

		parent::postInsert($entity);
	}


	/**
	 * PreDelete.
	 * OVERRIDE THIS METHOD IN A SUBCLASS.
	 *
	 * @param array $keyValueArray
	 */
	protected function preDelete($keyValueArray) {
		$siteOrderItem = ManagerHolder::get('SiteOrderItem')->getById($keyValueArray['id']);
		$productName = ManagerHolder::get('Product')->getById($siteOrderItem['product_id'], 'name');
    $parameterName = ManagerHolder::get('ParameterValue')->getById($siteOrderItem['parameter_group']['main_parameter_value_id'], 'e.*');

		Events::trigger('SiteOrder.itemAction', array(
			'id' => $siteOrderItem['siteorder_id'],
			'action' => 'Удален',
			'product_name' => $productName['name'],
      'parameter_id' => $parameterName['id'],
      'parameter_name' => $parameterName['name'],
			'qty' => $siteOrderItem['qty'],
			'date' => date(DOCTRINE_DATE_FORMAT),
			'price' => $siteOrderItem['price']
		));

		parent::preDelete($keyValueArray);

	}


}