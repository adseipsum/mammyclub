<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * ProductCommentManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/BaseCommentManager.php';
class ProductCommentManager extends BaseCommentManager {

  /** Name field. */
  protected $nameField = "id";

  /** Order by */
  protected $orderBy = "sortorder DESC";

  /** Fields. */
  public $fields = array("content" => array("type" => "tinymce", "class" => "required", "attrs" => array("maxlength" => 65536)),
                         "date" => array("type" => "datetime", "class" => "required"),
                         "rating" => array("type" => "select", "options" => array("" => "Без оценки", "1" => "1", "2" => "2", "3" => "3", "4" => "4", "5" => "5")),
                         "published" => array("type" => "checkbox"),
                         "product" => array("type" => "select", "relation" => array("entity_name" => "Product")),
                         "user" => array("type" => "select", "relation" => array("entity_name" => "User")));

  /** List params. */
  public $listParams = array("product.name", "user.name", "content", "rating", "published", "date");

  /**
   * PreProcessWhereQuery.
   * OVERRIDE THIS METHOD IN A SUBCLASS TO ADD joins and other stuff.
   * @param Doctrine_Query $query
   * @return Doctrine_Query
   */
  protected function preProcessWhereQuery($query, $pref, $what = '*') {
    $query = parent::preProcessWhereQuery($query, $pref, $what);
    if (strpos($what, 'user.') !== FALSE || $what == '*') {
      $query->addSelect("user_img.*")->leftJoin("user.image user_img");
    }

    return $query;
  }

  /**
   * commentsRecount
   * @param BaseCommentManager $entity
   */
  protected function commentsRecount($entity) {

    $productReviews = ManagerHolder::get($this->entityName)->getAllWhere(array('entity_id' => $entity['entity_id'], 'published' => TRUE), 'e.*');

    $rating = 0;
    $averageRating = 0;
    if(count($productReviews) > 0) {

      $ratedReviews = 0;
      foreach ($productReviews as $r) {
        if($r['rating'] > 0) {
          $rating += $r['rating'];
          $ratedReviews++;
        }
      }

      if($ratedReviews > 0) {
        $averageRating = round($rating/$ratedReviews);
      }

    }

    ManagerHolder::get('Product')->updateAllWhere(array('id' => $entity['entity_id']), array('comment_count' => count($productReviews), 'rating' => $averageRating));
  }

}