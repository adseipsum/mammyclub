<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * XBroadcastTemplateManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class XBroadcastTemplateManager extends BaseManager {

  /** Fields. */
  public $fields = array("type" => array("type" => "select", "class" => "required", "relation" => array("entity_name" => "XBroadcastType")),
                         "name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "is_enabled" => array("type" => "checkbox"),
                         "send_frequency" => array("type" => "input_integer"),
                         "send_start_from" => array("type" => "datetime", "class" => "required"),
                         "conversion_event" => array("type" => "enum"),
                         "utm_source" => array("type" => "input"),
                         "view_type" => array("type" => "enum", "class" => "required"),
                         "segment" => array("type" => "select", "class" => "required", "relation" => array("entity_name" => "XBroadcastSegment")),
                         "products" => array("type" => "select2_multiple", "relation" => array("entity_name" => "Product", "where_array" => array("not_in_stock" => FALSE))),
                         "content_variants" => array("type" => "include", "path" => '/includes/admin/xbroadcast_template/content_variants'));

  /** jsonFields. */
  public $jsonFields = array('subject' => array("type" => "input", "class" => "required"),
                             'sections.html' => array("type" => "tinymce", "class" => "required"),
                             'products_variants' => array("type" => "multipleselect", "relation" => array("sort" => TRUE, "search" => TRUE)));

  /** List params. */
  public $listParams = array("type.name", "name", "is_enabled", "send_start_from", "send_frequency", "view_type", "variants_count");

  /**
   * getPregnancyWeekTemplateForSingleSend
   *
   * @param $weekId
   * @return array
   * @throws Exception
   */
  public function getPregnancyWeekTemplateForSingleSend($weekId) {
    $result = $this->getAllWhere(array('type.slug' => BROADCAST_APP_SLUG_PREGNANCY_WEEK, 'is_enabled' => 1), 'e.*, segment.*');
    if ($result) {
      foreach ($result as $r) {
        $weekIds = get_array_vals_by_second_key($r['segment']['weeks'], 'id');
        if (in_array($weekId, $weekIds)) {
          return $r;
        }
      }
    }
    return array();
  }

  /**
   * GetDQLSelectQuery.
   * @param string $what
   * @param string $pref
   * @return Doctrine_Query
   */
  protected function getDQLSelectQuery($what = '*', $pref = 'e') {
    $query = parent::getDQLSelectQuery($what, $pref);
    $query->addWhere('e.soft_deleted = ?', FALSE);
    return $query;
  }

  /**
   * PreProcessWhereQuery.
   * OVERRIDE THIS METHOD IN A SUBCLASS TO ADD joins and other stuff.
   * @param Doctrine_Query $query
   * @return Doctrine_Query
   */
  protected function preProcessWhereQuery($query, $pref, $what = "*") {
    $query = parent::preProcessWhereQuery($query, $pref, $what);
    $from = $query->getDqlPart('from');
    $query->removeDqlQueryPart('from');
    foreach ($from as $f) {
      if (strpos($f, $pref . '.sections') !== FALSE) {
        continue;
      }
      $query->addFrom($f);
    }
    $from = $query->getDqlPart('from');
    if (strpos($what, 'sections.') !== FALSE || $what == '*') {
      $query->leftJoin($pref . ".sections sections WITH sections.soft_deleted = 0");
    }
    if (strpos($what, 'segment.') !== FALSE || $what == '*') {
      $query->addSelect("segment_weeks.*")->leftJoin("segment.weeks segment_weeks");
    }
    return $query;
  }

}