<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * OrderBroadcastManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class OrderBroadcastManager extends BaseManager {

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "subject" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "email_main_text" => array("type" => "tinymce", "class" => "required", "attrs" => array("maxlength" => 65536)));

  /** List params. */
  public $listParams = array("name");


  /**
   * @param $siteOrderId
   * @return bool
   */
  public function sendBySiteOrder($siteOrderId) {
    $siteOrder = ManagerHolder::get('SiteOrder')->getById($siteOrderId, 'e.*, delivery.*');
    if (empty($siteOrder)) {
      return false;
    }

    $broadcast = ManagerHolder::get('OrderBroadcast')->getAll('e.*');
    if (empty($broadcast)) {
      return false;
    }
    $broadcast = $broadcast[0];

    $user = ManagerHolder::get('User')->getById($siteOrder['user_id'], 'e.*, auth_info.*');
    if (empty($user)) {
      return false;
    }
    $user['name'] = $siteOrder['first_name'];

    $info = array(
      'fio' => $user['name'],
      'ttn_code' => $siteOrder['ttn_code'],
      'phone' => $siteOrder['phone']
    );
    if (empty($info['fio']) || empty($info['ttn_code']) || empty($info['phone'])) {
      return false;
    }

    $CI = &get_instance();
    $CI->load->helper('project');

    // Create MandrillBroadcast
    $broadcastData = array(
      'subject' => kprintf($broadcast['subject'], $info),
      'text' => '',
      'recipients_count' => 1,
      'read_count' => 0,
      'link_visited_count' => 0,
      'created_at' => date(DOCTRINE_DATE_FORMAT),
      'type' => ORDER_BROADCAST
    );

    $broadcastId = ManagerHolder::get('MandrillBroadcast')->insert($broadcastData);

    // Collect data to array
    $viewData = ManagerHolder::get('OrderBroadcast')->createBroadcastContent($broadcast, $user, $siteOrder);

    // Save Broadcast Links
    foreach ($viewData as &$data) {
      if (!empty($data)) {
        ManagerHolder::get('MandrillBroadcast')->saveBroadcastLinks($data, $broadcastId);
      }
    }

    // Insert recipient data
    $userData = array(
      'email' => $siteOrder['email'],
      'user_id' => $user['id'],
      'is_read' => 0,
      'is_send' => 0,
      'data' => serialize($user),
      'broadcast_id' => $broadcastId,
      'updated_at' => date(DOCTRINE_DATE_FORMAT)
    );
    $recipientId = ManagerHolder::get('MandrillBroadcastRecipient')->insert($userData);

    try {
      $metaData = array(
        'broadcast_id' => $broadcastId,
        'recipient_id' => $recipientId
      );
      ManagerHolder::get('EmailMandrill')->setMetadata($metaData);
      ManagerHolder::get('EmailMandrill')->sendTemplate($userData['email'], 'order_broadcast/view', $viewData, $viewData['subject']);
      log_message('debug', '[send_order_broadcast_single] - Email was sent to ' . $userData['email']. '; Subject: ' . $viewData['subject']);

      ManagerHolder::get('MandrillBroadcast')->updateById($broadcastId, 'sent_date', date(DOCTRINE_DATE_FORMAT));
    } catch (Exception $e) {
      log_message('error', '[send_order_broadcast_single] - Broadcast send error:' . $e->getMessage() . '; on email: ' . $user['auth_info']['email']);
    }

    ManagerHolder::get('EmailNotice')->sendNoticeAboutBroadcastEnd(ORDER_BROADCAST, 1);

    // Send SMS to user
    if (isset($siteOrder['phone']) && !empty($siteOrder['phone'])) {
      $smsMsg = $info['fio'] . ', Ваш заказ отправлен. ТТН ' . $siteOrder['ttn_code'];
      ManagerHolder::get('SMS')->sendMessage($siteOrder['phone'], str_replace(' ', '+', $smsMsg));
      log_message('debug', '[send_order_broadcast_single] - SMS was sent to: ' . $siteOrder['phone']);
    }

    return TRUE;
  }

  /**
   * Create broadcast content
   * @param array $broadcast
   * @param array $user
   * @param array $siteorder
   * @return array
   */
  public function createBroadcastContent($broadcast, $user, $siteorder) {

    $viewData = array();
    $viewData['subject'] = !empty($broadcast['subject']) ? $broadcast['subject'] : '';
    $viewData['email_main_text'] = !empty($broadcast['email_main_text']) ? $broadcast['email_main_text'] : '';

    $ci = &get_instance();
    $ci->load->helper('project_broadcast');

    // Proccess data
    foreach ($viewData as &$data) {
      if (!empty($data)) {
        if (strpos($data, '{products_table}') !== FALSE) {
          $data = ManagerHolder::get('ProductBroadcast')->process_cartitems_broadcast_table($data, $siteorder);
        }
        if (strpos($data, '{delivery_city}') !== FALSE) {
          if (isset($siteorder['delivery_city']['name'])) {
            $siteorder['delivery_city'] = $siteorder['delivery_city']['name'];
          } else {
            $city = ManagerHolder::get('City')->getById($siteorder['delivery_city_id'], 'e.*');
            $siteorder['delivery_city'] = $city['name'];
          }
        }
        ManagerHolder::get('MandrillBroadcast')->addLoginKeyToLink($data, $user['login_key']);
        kprintfLettersContent($user, $data);
        kprintfLettersContent($siteorder, $data);
        switch ($siteorder['delivery_type']) {
          case 'delivery-to-post':
            $data = preg_replace('/{delivery-to-home}[\s\S]*?{\/delivery-to-home}/', '', $data);
            $data = str_replace('{delivery-to-post}', '', $data);
            $data = str_replace('{/delivery-to-post}', '', $data);
            break;
          case 'delivery-to-home':
            $data = preg_replace('/{delivery-to-post}[\s\S]*?{\/delivery-to-post}/', '', $data);
            $data = str_replace('{delivery-to-home}', '', $data);
            $data = str_replace('{/delivery-to-home}', '', $data);
            break;
        }
      }
    }

    return $viewData;
  }

}