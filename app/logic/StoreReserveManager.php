<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * StoreReserveManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class StoreReserveManager extends BaseManager {

  /** Name field. */
  protected $nameField = "id";


  /** Fields. */
  public $fields = array("product" => array("type" => "select", "relation" => array("entity_name" => "Product")),
                         "product_group" => array("type" => "select", "relation" => array("entity_name" => "ParameterGroup")),
                         "store" => array("type" => "select", "relation" => array("entity_name" => "Store")),
                         "qty" => array("type" => "input_integer"),
                         "cart_item_id" => array("type" => "input_integer"));

  /** List params. */
  public $listParams = array("product.name", "product_group.name", "store.name", "qty", "cart_item_id");


  /**
   * getReserveInfoBySiteOrderItemId
   * @param $siteOrderItemId
   * @return array
   */
  public function getReserveInfoBySiteOrderItemId($siteOrderItemId) {
    $siteOrderItem = ManagerHolder::get('SiteOrderItem')->getById($siteOrderItemId, 'e.*');
    $siteOrder = ManagerHolder::get('SiteOrder')->getById($siteOrderItem['siteorder_id'], 'id, siteorder_status.*');
    if ($siteOrder['siteorder_status']['is_cancel_reserve_status']) {
      return array('current' => array('qty' => 0), 'inventories' => array(5 => array('free_qty' => 0)), 'siteorder_qty' => 0);
    }

    if (!empty($siteOrderItem['parameter_group_id'])) {
      $productGroup = ManagerHolder::get('ParameterGroup')->getById($siteOrderItem['parameter_group_id'], 'e.*, product.*, inventories.*, reserves.*, main_parameter_value.*');
      $reserves = $productGroup['reserves'];
      $inventories = $productGroup['inventories'];
    } else {
      $product = ManagerHolder::get('Product')->getById($siteOrderItem['product_id'], 'e.*, inventories.*, reserves.*');
      $reserves = $product['reserves'];
      $inventories = $product['inventories'];
    }

    $storeReserves = array();
    $currentReserve = array('qty' => 0);
    foreach ($reserves as $reserve) {
      if (isset($storeReserves[$reserve['store_id']])) {
        $storeReserves[$reserve['store_id']] += $reserve['qty'];
      } else {
        $storeReserves[$reserve['store_id']] = $reserve['qty'];
      }
      if ($reserve['siteorder_item_id'] == $siteOrderItem['id']) {
        $currentReserve = $reserve;
      }
    }

    $storeInventories = array();
    foreach ($inventories as $inventory) {
      $storeInventories[$inventory['store_id']]['qty'] = $inventory['qty'];
      if (isset($storeReserves[$inventory['store_id']])) {
        $storeInventories[$inventory['store_id']]['free_qty'] = $inventory['qty'] - $storeReserves[$inventory['store_id']];
      } else {
        $storeInventories[$inventory['store_id']]['free_qty'] = $inventory['qty'];
      }
    }

    return array('current' => $currentReserve, 'inventories' => $storeInventories, 'siteorder_qty' => $siteOrderItem['qty']);
  }
}