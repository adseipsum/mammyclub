<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * PregnancyArticleManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class PregnancyArticleManager extends BaseManager {

  /** Order by */
  protected $orderBy = "pregnancyweek.number DESC";

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "page_url" => array("type" => "input", "class" => "required readonly", "attrs" => array("startwith" => "/беременность-по-неделям/", "depends" => "pregnancyarticle_name", "readonly" => "readonly", "maxlength" => 255)),
                         "pregnancyweek" => array("type" => "select", "relation" => array("entity_name" => "PregnancyWeek")),
                         "content" => array("type" => "tinymce", "attrs" => array("maxlength" => 65536)),
                         "content_short" => array("type" => "tinymce", "attrs" => array("maxlength" => 65536)),
                         "author" => array("type" => "select", "relation" => array("entity_name" => "Author")),
                         "image" => array("type" => "image"),
                         "published" => array("type" => "checkbox"),
                         "hide_contents" => array("type" => "checkbox"),
                         "header.title" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255, "depends" => "pregnancyarticle_name")),
                         "header.description" => array("type" => "textarea", "class" => "charCounter"));

  /** List params. */
  public $listParams = array("name", array("author" => "name"), array("pregnancyweek" => "name"), "published");

  /**
   * Returns array of relative site urls and other info of all entities to be used in stiemap.xml
   * @return array of arrays for entities: loc, lastmod, changefreq, priority. Only loc is mandatory.
   * @example 'loc'=>'item/1', 'lastmod'=>'1990-01-21', 'changefreq'=>'daily', 'priority'=>0.5
   * @see http://www.sitemaps.org/ru/protocol.html#xmlTagDefinitions
   */
  public function getAllForSitemap() {
    $pregancyWeek = $this->getAll('*');

    $urls = array();
    if (!empty($pregancyWeek)) {
      foreach ($pregancyWeek as $pw) {
        $urls[] = array('loc' => $pw['page_url']);
      }
    }

    return $urls;
  }

  /**
   * Get next pregnancy article notice
   * @param array $authEntity
   * @param array $settings
   * @return string
   */
  public function getNextPregnancyArticleNotice (&$authEntity, &$settings) {
    $currentWeekNum = ManagerHolder::get('PregnancyWeek')->getById($authEntity['pregnancyweek_current_id'], 'number');
    $lastWeekNum = ManagerHolder::get('PregnancyWeek')->getMax('number');
    if ($currentWeekNum['number'] < $lastWeekNum) {
      $CI =& get_instance();
      $CI->load->helper('common/itirra_date');
      $nextWeek = ManagerHolder::get('PregnancyWeek')->getOneWhere(array('number' => $currentWeekNum['number'] + 1), 'id');
      $nextWeekArticle = ManagerHolder::get('PregnancyArticle')->getOneWhere(array('pregnancyweek_id' => $nextWeek['id']), 'name');
      $data = array('NEXT_ARTICLE_DATE' => translate_month(date('j F Y', strtotime($authEntity['pregnancyweek_current_started']) + 60 * 60 * 24 * 7)),
                    'NEXT_PREGNANCY_ARTICLE' => $nextWeekArticle['name']);
      return kprintf($settings['privat_pregnancy_week_date'], $data);
    } else {
      return $settings['privat_pregnancy_week_last'];
    }
  }

}