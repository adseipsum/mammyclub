<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * CampaignManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class CampaignManager extends BaseManager {

  /** Order by */
  protected $orderBy = "priority DESC";

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "priority" => array("type" => "input_integer"),
                         "end_date" => array("type" => "date"),
                         "published" => array("type" => "checkbox"),
                         "allowed_sections" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "banned_countries" => array("type" => "input", "attrs" => array("maxlength" => 255)),
                         "slot_top_banner" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_right_banner" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_text_top" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_text_bot" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_text_comments_bot" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_tt1" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_tt2" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_tt3" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)),
                         "slot_head_section" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("maxlength" => 5000)));

  /** List params. */
  public $listParams = array("name", "priority", "end_date", "published", "banned_countries");

  /**
   * getActiveCampaigns
   * @param string $country
   */
  public function getActiveCampaign($country = 'UA') {

    $result = array();

    $nativeQ = 'SELECT * FROM campaign WHERE published = 1 AND (end_date IS NULL OR end_date > CURDATE())';
    $campaigns = ManagerHolder::get('Campaign')->executeNativeSQL($nativeQ);
    if(empty($campaigns)) {
      return $result;
    }

    $pageUrl = surround_with_slashes(uri_string());

    // Filter the campaigns based on allowed_sections
    foreach ($campaigns as $k => $v) {
      if(!empty($v['banned_countries'])) {
        $bannedCountries = explode(',', $v['banned_countries']);
        if(in_array($country, $bannedCountries)) {
          unset($campaigns[$k]);
          continue;
        }
      }
      if(empty($v['allowed_sections'])) {
        continue;
      }
      $urlSegments = explode(',', $v['allowed_sections']);
      $matched = FALSE;
      foreach ($urlSegments as $segment) {
        if($segment == '/') {
          if($segment == $pageUrl) {
            $matched = TRUE;
            break;
          }
          continue;
        }
        if(strpos($pageUrl, surround_with_slashes($segment)) !== FALSE) {
          $matched = TRUE;
          break;
        }
      }
      if($matched == FALSE) {
        unset($campaigns[$k]);
      }
    }
    if(empty($campaigns)) {
      return $result;
    }

    // Shuffle the campaigns
    if(count($campaigns) > 1) {
      $campaigns = shuffle_assoc($campaigns);
    }

    // Creating one mixed campaign
    $fieldNames = array_keys($this->fields);
    foreach ($fieldNames as $k => $v) {
      if(strpos($v, 'slot_') === FALSE) {
        unset($fieldNames[$k]);
      }
    }
    foreach ($fieldNames as $field) {
      $tempPriority = NULL;
      foreach ($campaigns as $c) {
        if(!empty($c[$field])) {
          if(!isset($result[$field])) {
            $result[$field] = $c[$field];
            $tempPriority = $c['priority'];
          } else {
            if($c['priority'] >= $tempPriority) {
              $tempPriority = $c['priority'];
              $result[$field] = $c[$field];
            }
          }
        }
      }
    }
    return $result;
  }

}