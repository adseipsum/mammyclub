<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * QuestionManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class QuestionManager extends BaseManager {

  /** Name field. */
  protected $nameField = "name";

  /** Order by */
  protected $orderBy = "date DESC";

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "page_url" => array("type" => "input", "class" => "required readonly", "attrs" => array("startwith" => "/консультация/", "depends" => "question_name", "readonly" => "readonly", "maxlength" => 255)),
                         "content" => array("type" => "tinymce", "class" => "required", "attrs" => array("maxlength" => 65536)),
                         "user" => array("type" => "select", "class" => "required", "relation" => array("entity_name" => "User")),
                         "date" => array("type" => "datetime", "class" => "required"),
                         "header.title" => array("type" => "input", "class" => "required charCounter", "attrs" => array("depends" => "question_name", "maxlength" => 65536)),
                         "header.description" => array("type" => "textarea", "class" => "charCounter", "attrs" => array("depends" => "question_content")));

  /** List params. */
  public $listParams = array("name", array("user" => "name"), "comment_count", "date");

  /**
   * Returns array of relative site urls and other info of all entities to be used in stiemap.xml
   * @return array of arrays for entities: loc, lastmod, changefreq, priority. Only loc is mandatory.
   * @example 'loc'=>'item/1', 'lastmod'=>'1990-01-21', 'changefreq'=>'daily', 'priority'=>0.5
   * @see http://www.sitemaps.org/ru/protocol.html#xmlTagDefinitions
   */
  public function getAllForSitemap() {
    $questions = $this->getAll('*');

    $urls = array();
    if (!empty($questions)) {
      foreach ($questions as $q) {
        $urls[] = array('loc' => $q['page_url']);
      }
    }

    return $urls;
  }


  /**
   * Get required fields
   * @return array of requred fields
   */
  public function getRequiredFields() {
    $result = array('all' => array(),
        'simple' => array(),
        'thatDepend' => array(),
        'thatTotallyDepend' => array());

    foreach ($this->fields as $k => $v) {
      if ($k == 'page_url') {
        continue;
      }
      if (isset($v['class']) && strpos($v['class'], 'required') !== FALSE) {
        $result['all'][] = $k;
        if (isset($v['attrs']['depends'])) {
          if (isset($v['attrs']['readonly'])) {
            $result['thatTotallyDepend'][] = $k;
          } else {
            $result['thatDepend'][] = $k;
          }
        } else {
          $result['simple'][] = $k;
        }
      }
    }

    return $result;
  }

}