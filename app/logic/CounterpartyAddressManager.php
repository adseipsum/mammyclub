<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * CounterpartyAddressManager
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'logic/base/BaseManager.php';
class CounterpartyAddressManager extends BaseManager {

  /** Fields. */
  public $fields = array("name" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "street" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 255)),
                         "building" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 20)),
                         "ref" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 50)),
                         "street_ref" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 50)),
                         "building_ref" => array("type" => "input", "class" => "required", "attrs" => array("maxlength" => 50)),
                         "counterparty" => array("type" => "select", "relation" => array("entity_name" => "Counterparty")));

  /** List params. */
  public $listParams = array("name", "city.name", "counterparty.name");

	/**
	 * Sync
	 */
	public function sync() {

		$counterparties = ManagerHolder::get('Counterparty')->getAll('e.*');

		foreach ($counterparties as $counterparty) {
			$this->loadAndSync($counterparty);
		}
	}

	/**
	 * @param $counterparty
	 * @param $page
	 */
	private function loadAndSync($counterparty, $page = 1)
  {
    $newPostAccounts = ManagerHolder::get('NewPostAccount')->getAsViewArray(array(), 'api_key');

    foreach ($newPostAccounts as $acocuntId => $acocuntApiKey) {
      $CI = &get_instance();
      $CI->load->library('NewPostSdk');
      $CI->newpostsdk->setApiKey($acocuntApiKey);

      $result = $CI->newpostsdk->getCounterpartyAddresses($counterparty['ref'], $page);

      foreach ($result->data as $address) {
        $entity = array();
        $entity['name'] = $address->Description;
        $entity['street'] = $address->StreetDescription;
        $entity['building'] = $address->BuildingDescription;
        $entity['street_ref'] = $address->StreetRef;
        $entity['building_ref'] = $address->BuildingRef;
        $entity['counterparty_id'] = $counterparty['id'];

        $city = ManagerHolder::get('City')->getOneWhere(array('ref' => $address->CityRef), 'e.*');
        $entity['city_id'] = $city['id'];

        $exists = ManagerHolder::get('CounterpartyAddress')->existsWhere(array('ref' => $address->Ref));
        if ($exists) {
          foreach ($entity as $k => $v) {
            if ($entity[$k] === NULL) {
              unset($entity[$k]);
            }
          }
          ManagerHolder::get('CounterpartyAddress')->updateAllWhere(array('ref' => $address->Ref), $entity);
        } else {
          $entity['ref'] = $address->Ref;
          ManagerHolder::get('CounterpartyAddress')->insert($entity);
        }
      }

//    if ($page % 5 == 0) {
//      sleep(2);
//    }
//
//    if ($result->info->totalCount > (100 * $page)) {
//      $page++;
//      $this->loadAndSync($counterparty, $page);
//    }
    }
  }

}