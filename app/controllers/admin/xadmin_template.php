<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * xAdmin_Template
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'controllers/admin/base/base_admin_controller.php';
class xAdmin_Template extends Base_Admin_Controller {

  /** $entityFieldMap */
  protected $entityFieldMap;

  /**
   * Constructor.
   * Put loads here. Everything else should be in init().
   */
  public function xAdmin_Template() {
    parent::Base_Admin_Controller();
    $this->config->load('templates');
    $this->entityFieldMap = $this->config->item('templates');
  }

  /**
   * setViewParamsIndex
   * @param  $entities
   * @param  $pager
   * @param  $hasSidebar
   */
  protected function setViewParamsIndex(&$entities, &$pager, $hasSidebar) {
    // Process custom select values
    foreach ($entities as &$e) {
      $e['field'] = lang('admin.add_edit.' . strtolower($e['entity_name']) . '.' . $e['field']);
      $e['entity_name'] = lang('enum.template.entity_type.' . strtolower($e['entity_name']));
    }
    parent::setViewParamsIndex($entities, $pager, $hasSidebar);
  }

  /**
   * preProcessFields
   * the method is called before passing
   * fields to the layout
   */
  protected function preProcessFields(&$entity) {
    parent::preProcessFields($entity);
    if ($entity['field'] == 'header.title') {
	    $entity['value'] = substr($entity['value'], 0, 300);
    }
    $this->fields['entity_name']['options'][''] = lang('admin.add_edit.' . strtolower($this->entityName) . '.entity_name.default');
    $templateEntityNames = array_keys($this->entityFieldMap);
    foreach ($templateEntityNames as $t) {
      $this->fields['entity_name']['options'][$t] = lang('enum.template.entity_type.' . strtolower($t));
    }
    $this->fields['field']['options'][''] = lang('admin.add_edit.' . strtolower($this->entityName) . '.field.default');
    if (!empty($entity['entity_name']) && isset($this->entityFieldMap[$entity['entity_name']])) {
      $entityNameFields = $this->entityFieldMap[$entity['entity_name']]['fields'];
      foreach ($entityNameFields as $f) {
        $this->fields['field']['options'][$f] = lang('admin.add_edit.' . strtolower($entity['entity_name']) . '.' . $f);
      }
    }
  }

  /**
   * ajax_get_entity_fields
   */
  public function ajax_get_entity_fields() {
    $result = array();
    if(!empty($_GET['entityName']) && isset($this->entityFieldMap[$_GET['entityName']])) {

      $entityFields = $this->entityFieldMap[$_GET['entityName']]['fields'];
      foreach ($entityFields as $f) {
        $result[] = array('id' => $f,
            'name' => lang('admin.add_edit.' . strtolower($_GET['entityName']) . '.' . $f));
      }
    }
    die(json_encode($result));
  }



}