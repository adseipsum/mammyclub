<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * xAdmin_UsefulTipsBroadcast
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'controllers/admin/base/base_admin_controller.php';
class xAdmin_UsefulTipsBroadcast extends Base_Admin_Controller {

  /** Additional Actions. */
  protected $additionalItemActions = array('preview', 'clone_broadcast', 'add_recipients_via_csv');

  /** Filters. */
  protected $filters = array("countries.id" => "");

  /** SearchParams. */
  protected $searchParams = array("name");

  /**
   * add_recipients_via_csv.
   */
  public function add_recipients_via_csv($id) {
    $e = ManagerHolder::get($this->entityName)->getById($id, 'e.*');
    $this->layout->set('broadcast', $e);
    $this->layout->view('usefultipsbroadcast/add_recipients_via_csv');
  }

  /**
   * add_recipients_via_csv_process.
   */
  public function add_recipients_via_csv_process() {

    $e = ManagerHolder::get($this->entityName)->getById($_POST['id'], 'e.*');
    if(empty($e) || !isset($_FILES['file'])) {
      show_404();
    }

    // Load CSV Library
    $this->load->library('common/csv');

    $this->csv->setInputFileEncoding('utf-8');

    $this->csv->setSeparator("\r");

    // Read CSV File
    $this->csv->readFile($_FILES['file']['tmp_name']);

    $emails = array();

    while (($row = $this->csv->readRow()) !== FALSE) {
      foreach ($row as $r) {
        $emails[] = $r;
      }
    }

    if(empty($emails)) {
      set_flash_error('Неправильный формат файла. Email-ы должны быть разделены запятой. Например: email1@mail.ru,email12@itirra.com,assd@asdas.net');
      redirect_to_referral();
    }

    $users = ManagerHolder::get('User')->getAllWhere(array('auth_info.email' => $emails), 'e.*');
    ManagerHolder::get('UsefulTipsBroadcastUser')->deleteAllWhere(array('useful_tips_broadcast_id' => $e['id']));
    if(!empty($users)) {
      foreach ($users as $u) {
        ManagerHolder::get('UsefulTipsBroadcastUser')->insert(array('useful_tips_broadcast_id' => $e['id'], 'user_id' => $u['id']));
      }
    }

    set_flash_notice('Добавлено ' . count($users) . ' пользователей к рассылке');
    redirect_to_referral();
  }

  /**
   * preview
   * @param int $id
   */
  public function preview($id) {

    $this->load->helpers(array('project_broadcast', 'common/itirra_date', 'project'));

    $entity = ManagerHolder::get($this->managerName)->getById($id, 'e.*, article.*, products.*');
    $tempMainText = !empty($entity['article']) ? $entity['article']['content'] : '';
    if(strpos($entity['email_main_text'], '{PRODUCTS}') !== FALSE) {
      $tempMainText .= $entity['email_main_text'];
    }
    if(!empty($tempMainText)) {
      $entity['email_main_text'] = $tempMainText;
    }

    $viewData = ManagerHolder::get('Common')->createViewDataPreview($entity);
    foreach ($viewData as $k => $v) {
      $this->layout->set($k, $v);
    }

    // Set subject
    $this->layout->set('subject', !empty($entity['subject']) ? $entity['subject'] : '');

    $this->layout->setLayout('email');
    $this->layout->setModule('email/product_broadcast');
    $this->layout->view('view');

    $html = $this->layout->renderLayout(TRUE);

    die($html);
  }

  /**
   * clone_broadcast.
   */
  public function clone_broadcast($id) {

    $e = ManagerHolder::get($this->entityName)->getById($id, 'e.*, countries.*, pregnancy_weeks.*, products.*, products_boys.*, products_girls.*');

    unset($e['id']);

    $e['is_sent'] = TRUE;
    $e['is_processing'] = FALSE;
    $e['update_frequency'] = 0;
    $e['countries'] = get_array_vals_by_second_key($e['countries'], 'id');
    $e['pregnancy_weeks'] = get_array_vals_by_second_key($e['pregnancy_weeks'], 'id');
    $e['article'] = $e['article_id'];
    $e['products'] = get_array_vals_by_second_key($e['products'], 'id');
    $e['products_boys'] = get_array_vals_by_second_key($e['products_boys'], 'id');
    $e['products_girls'] = get_array_vals_by_second_key($e['products_girls'], 'id');
    $e['name'] = $e['name'] . lang('clone.word');

    // Check for existing clones
    ManagerHolder::get($this->entityName)->setSearch($e['name'], 'name', 'starts_with');
    $clones = ManagerHolder::get($this->entityName)->getAll('name');
    if(!empty($clones)) {
      $number = 1;
      foreach($clones as $clone) {
        if(preg_match("@" . lang('clone.word') . "([0-9]+)$@", $clone['name'], $matches)) {
          $n = $matches[1];
          if($n >= $number) {
            $number = $n + 1;
          }
        }
      }
      $e['name'] .= $number;
    }


    $e['id'] = ManagerHolder::get($this->entityName)->insert($e);

    set_flash_notice('Рассылка клонирована успешно');
    redirect_to_referral();
  }

  /**
   * preProcessFields
   * the method is called before passing
   * fields to the layout
   */
  protected function preProcessFields(&$entity) {
    parent::preProcessFields($entity);
    $this->fields['update_frequency']['options'] = range(0, 30);
  }

  /**
   * Implementation of POST_SAVE event callback
   * @param Object $entity reference
   * @return Object
   */
  protected function postSave(&$entity) {

    $productsEntityMap = array('UsefulTipsBroadcastProduct'      => 'products',
                               'UsefulTipsBroadcastProductBoys'  => 'products_boys',
                               'UsefulTipsBroadcastProductGirls' => 'products_girls');

    foreach ($productsEntityMap as $manager => $alias) {
      if(isset($_POST[$alias]) && !empty($_POST[$alias])) {
        ManagerHolder::get($manager)->deleteAllWhere(array('useful_tips_broadcast_id' => $entity['id']));
        foreach ($_POST[$alias] as $pId) {
          $data = array('useful_tips_broadcast_id' => $entity['id'],
                        'product_id' => $pId);
          ManagerHolder::get($manager)->insert($data);
        }
      }
    }
  }

}