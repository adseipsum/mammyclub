<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * xAdmin_PregnancyWeek
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'controllers/admin/base/base_admin_controller.php';
class xAdmin_PregnancyWeek extends Base_Admin_Controller {

  /** Additional Actions. */
  protected $additionalItemActions = array('preview');

  /**
   * @param $entity
   */
  protected function preProcessFields(&$entity) {
    $this->fields['number']['options'] = array_combine(range(1,100), range(1,100));
    parent::preProcessFields($entity);
  }


  /**
   * preview
   * @param int $id
   */
  public function preview($id) {

    $this->load->helpers(array('project_broadcast', 'common/itirra_date', 'project'));

    $entity = ManagerHolder::get($this->managerName)->getById($id, 'e.*, article.*, products.*, PregnancyArticle.*');
    $tempMainText = $entity['PregnancyArticle'][0]['content'];
    if(strpos($entity['email_main_text'], '{PRODUCTS}') !== FALSE) {
      $tempMainText .= $entity['email_main_text'];
    }
    $entity['email_main_text'] = $tempMainText;

    $viewData = ManagerHolder::get('Common')->createViewDataPreview($entity);
    foreach ($viewData as $k => $v) {
      $this->layout->set($k, $v);
    }

    // Set subject
    $this->layout->set('subject', !empty($entity['email_subject']) ? $entity['email_subject'] : '');

    $this->layout->setLayout('email');
    $this->layout->setModule('email/product_broadcast');
    $this->layout->view('view');

    $html = $this->layout->renderLayout(TRUE);

    die($html);
  }


  /**
   * PreProcessPost.
   * htmlspecialchars all fields except TinyMCE
   * remove all empty fields.
   */
  protected function preProcessPost() {
    if (isset($_POST['products']) && !empty($_POST['products'])) {
      $this->session->set_userdata('savedPostProducts', $_POST['products']);
      unset($_POST['products']);
    }
    parent::preProcessPost();
  }

  /**
   * Implementation of POST_SAVE event callback
   * @param Object $entity reference
   * @return Object
   */
  protected function postSave(&$entity) {
    $savedPostProducts = $this->session->userdata('savedPostProducts');
    if(!empty($savedPostProducts)) {
      ManagerHolder::get('PregnancyWeekProduct')->deleteAllWhere(array('pregnancy_week_id' => $entity['id']));
      foreach ($savedPostProducts as $pId) {
        $data = array('pregnancy_week_id' => $entity['id'],
                      'product_id' => $pId);
        ManagerHolder::get('PregnancyWeekProduct')->insert($data);
      }
    }
    $this->session->unset_userdata('savedPostProducts');
  }

}