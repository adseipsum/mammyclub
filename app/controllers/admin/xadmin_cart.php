<?php if (!defined("BASEPATH")) exit("No direct script access allowed");

/**
 * xAdmin_Cart
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'controllers/admin/base/base_admin_controller.php';
class xAdmin_Cart extends Base_Admin_Controller {

  /** DateFilters. */
  protected $dateFilters = array("created_date", "updated_date");

	/** Filters. */
  protected $filters = array("order_status" => '');

	/** SearchParams. */
	protected $searchParams = array("user.name");

  /**
   * Index.
   */
  public function index($page = "") {
    $this->extraWhere = array('user_id <>' => '');
    parent::index($page);
  }

  /**
   * setViewParamsIndex
   * @param  $entities
   * @param  $pager
   * @param  $hasSidebar
   */
  protected function setViewParamsIndex(&$entities, &$pager, $hasSidebar) {
    $this->layout->set("processListUrl", $this->processListUrl);
    $this->layout->set("isDeleteAllAllowed", $this->isDeleteAllAllowed);
    $this->layout->set("isListSortable", $this->isListSortable);
    $this->layout->set("maxLines", $this->maxLines);
    $this->layout->set("export", $this->export);
    $this->layout->set("import", $this->import);
    unset($this->actions['add'], $this->actions['delete']);
    $this->layout->set("actions", $this->actions);
    $this->layout->set("hasSidebar", $hasSidebar);
    $this->layout->set("menuItems", $this->menuItems);
    $this->layout->set("defOrderBy", $this->defOrderBy);
    $this->layout->set("params", $this->listParams);
    $this->layout->set("fields", $this->fields);
    $this->layout->set("entities", $entities);
    $this->layout->set("pager", $pager);
    $this->layout->set("autocompleteEnabled", $this->autocompleteEnabled);
    $this->layout->set("listViewIgnoreLinks", $this->listViewIgnoreLinks);
    $this->layout->set("listViewLinksRewrite", $this->listViewLinksRewrite);
    $this->layout->set("listViewValuesRewrite", $this->listViewValuesRewrite);
    $this->layout->set("additionalPostParams", $this->additionalPostParams);
    $this->layout->set("additionalActions", $this->additionalActions);
    $this->layout->set("batchUpdateFields", $this->batchUpdateFields);
  }

  /**
   * Implementation of PRE_ADD_EDIT event callback
   * @param array $entity reference
   * @return array
   */
  protected function preAddEditView(&$entity) {

    if(!empty($entity['items'])) {
      foreach ($entity['items'] as &$item) {
        $item['product'] = ManagerHolder::get('Product')->getById($item['product_id'], 'name');
      }
    }

  }

  /**
   * Ajax update user
   */
  public function ajax_update_user() {
    simple_validate_post(array('new_user_id', 'site_order_id'));

    $siteOrder = ManagerHolder::get('SiteOrder')->getById($_POST['site_order_id'], 'e.*');
    $cart = ManagerHolder::get('Cart')->getOneWhere(array('siteorder_id' => $siteOrder['id']), 'e.*, items.*');

    $userId = !empty($_POST['new_user_id']) ? $_POST['new_user_id'] : NULL;

    ManagerHolder::get('SiteOrder')->updateById($siteOrder['id'], 'user_id', $userId);
    ManagerHolder::get('Cart')->updateById($cart['id'], 'user_id', $userId);

    foreach ($cart['items'] as &$cartItem) {
      $cartItem['product'] = ManagerHolder::get('Product')->getById($cartItem['product_id'], 'e.*');
    }

    ManagerHolder::get('Sale')->recountCartWithDiscount($userId, $cart['id'], $_POST['site_order_id'], $cart['items']);

    $cart = ManagerHolder::get('Cart')->getOneWhere(array('siteorder_id' => $siteOrder['id']), 'e.*, items.*');
    if (isset($cart['items']) && !empty($cart['items'])) {
      foreach ($cart['items'] as &$cartItem) {
        // Add product
        $cartItem['product'] = ManagerHolder::get('Product')->getById($cartItem['product_id'], 'e.*');
        // Add selected by user parameters
        if (!empty($cartItem['additional_product_params'])) {
          $cartItem['additional_product_params'] = unserialize($cartItem['additional_product_params']);
        }
        // Add all available parameters
        if (isset($cartItem['product']['product_params_id']) && !empty($cartItem['product']['product_params_id'])) {
          $cartItem['product']['params'] = ManagerHolder::get('ProductParams')->getById($cartItem['product']['product_params_id'], 'e.*');
          $cartItem['product']['params'] = unserialize($cartItem['product']['params']['product_params']);
        }
      }
    }

    $html = '';

    $this->layout->setLayout('empty');
    $this->layout->set('cart', $cart);
    $html .= $this->layout->view('siteorder/cart', TRUE);

    $user = ManagerHolder::get('User')->getById($_POST['new_user_id'], 'e.*');
    ManagerHolder::get('User')->addAvailableSalestoUser($user);
    $products = ManagerHolder::get('Product')->getAll('e.*, product_params.*');
    foreach ($products as &$product) {
      if (!empty($user)) {
        ManagerHolder::get('Sale')->addAvailableSaleToProducts($user, $product);
      }
      if (!empty($product['product_params_id'])) {
        $product['params'] = ManagerHolder::get('ProductParams')->getById($product['product_params_id'], 'e.*');
      }
    }
    unset($product);

    $this->layout->set('products', $products);
    $html .= $this->layout->view('siteorder/add_to_cart', TRUE);

    die($html);
  }

}