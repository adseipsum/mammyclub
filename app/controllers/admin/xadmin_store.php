<?php if (!defined("BASEPATH")) exit("No direct script access allowed");
/**
 * xAdmin_Store
 * This class has been auto-generated by Itirra
 */
require_once APPPATH . 'controllers/admin/base/base_admin_controller.php';
class xAdmin_Store extends Base_Admin_Controller {

  /** Filters. */
  protected $filters = array("published" => "");

  /** SearchParams. */
  protected $searchParams = array("name");

  /**
   * SetAddEditDataAndShowView.
   * Set all needed view data and show add_edit form.
   * @param object $entity
   */
  protected function setAddEditDataAndShowView($entity) {
//    $this->fields['sender_warehouse']['options'][''] = '--Не выбрано--';
//    if (!empty($entity['sender_city'])) {
//      $result = ManagerHolder::get('Warehouse')->getAllWhere(array('city_id' => $entity['sender_city']['id']), 'id, name');
//      foreach ($result as $item) {
//        $this->fields['sender_warehouse']['options'][$item['id']] = $item['name'];
//      }
//    }

    parent::setAddEditDataAndShowView($entity);
  }

  /**
   * ajax_get_warehouse
   * @param null $cityId
   */
  public function ajax_get_warehouse($cityId = null) {
    if (!empty($cityId)) {
      $result = ManagerHolder::get('Warehouse')->getAllWhere(array('city_id' => $cityId), 'id, name');
      die(json_encode($result));
    }
    die(null);
  }

  /**
   * ajax_get_counterparty_address
   * @param null $counterpartyId
   * @param null $cityId
   */
  public function ajax_get_counterparty_address($counterpartyId = null, $cityId = null) {
    if (!empty($counterpartyId)) {
      $where = array();
      $where['counterparty_id'] = $counterpartyId;
      if (!empty($cityId)) {
        $where['city_id'] = $cityId;
      }

      $result = ManagerHolder::get('CounterpartyAddress')->getAllWhere($where, 'id, name');
      die(json_encode($result));
    }
    die(null);
  }

  /**
   * ajax_get_counterparty_address
   * @param null $counterpartyId
   */
  public function ajax_get_counterparty_contact($counterpartyId = null) {
    if (!empty($counterpartyId)) {
      $result = ManagerHolder::get('CounterpartyContactPerson')->getAllWhere(array('counterparty_id' => $counterpartyId), 'id, name, phones');
      foreach ($result as $k => $v) {
        $result[$k]['name'] = $v['name'] . ' , тел. ' . $v['phones'];
        unset($result[$k]['phones']);
      }
      die(json_encode($result));
    }
    die(null);
  }

  /**
   * Implementation of POST_SAVE event callback
   * @param Object $entity reference
   * @return Object
   */
  protected function postSave(&$entity) {
    return $entity;

    $this->load->library('RetailCrmApi');

    $store = array();
    $store['name'] = $entity['name'];
    if ($entity['id'] != ZAMMLER_STORE_ID) {
      $store['type'] = 'store-type-supplier';
    } else {
      $store['type'] = 'store-type-warehouse';
    }
    $store['inventoryType'] = 'integer';
    $store['code'] = $entity['code'];
    $store['code'] = $entity['code'];

    $response = $this->retailcrmapi->storesEdit($store);

    return $entity;
  }


}