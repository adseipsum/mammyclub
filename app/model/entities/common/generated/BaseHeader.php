<?php

/**
 * BaseHeader
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $ArticleCategory
 * @property Doctrine_Collection $Page
 * @property Doctrine_Collection $PregnancyArticle
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $ProductCategory
 * @property Doctrine_Collection $ProductSaleCategory
 * @property Doctrine_Collection $Question
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHeader extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('header');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 500, array(
             'type' => 'string',
             'length' => '500',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Article', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('ArticleCategory', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('Page', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('PregnancyArticle', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('ProductCategory', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('ProductSaleCategory', array(
             'local' => 'id',
             'foreign' => 'header_id'));

        $this->hasMany('Question', array(
             'local' => 'id',
             'foreign' => 'header_id'));
    }
}