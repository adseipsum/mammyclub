<?php

/**
 * BaseProductBrand
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $page_url
 * @property string $description
 * @property integer $image_id
 * @property string $delivery_time
 * @property Image $image
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $product_categories
 * @property Doctrine_Collection $product_category_product_brand_rels
 * @property Doctrine_Collection $product_sale_categories
 * @property Doctrine_Collection $stores
 * @property Doctrine_Collection $store_product_brand_rels
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductBrand extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product_brand');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Название',
             'length' => '255',
             ));
        $this->hasColumn('page_url', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'default' => '/',
             'msgprop' => 'Название в URL-адресе',
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', 3000, array(
             'type' => 'string',
             'msgprop' => 'Описание',
             'length' => '3000',
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Изображение',
             'length' => '4',
             ));
        $this->hasColumn('delivery_time', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Image as image', array(
             'local' => 'image_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'brand_id'));

        $this->hasMany('ProductCategory as product_categories', array(
             'refClass' => 'ProductCategoryProductBrand',
             'local' => 'product_brand_id',
             'foreign' => 'product_category_id'));

        $this->hasMany('ProductCategoryProductBrand as product_category_product_brand_rels', array(
             'local' => 'id',
             'foreign' => 'product_brand_id'));

        $this->hasMany('ProductSaleCategory as product_sale_categories', array(
             'refClass' => 'ProductCategoryProductBrand',
             'local' => 'product_brand_id',
             'foreign' => 'product_sale_category_id'));

        $this->hasMany('Store as stores', array(
             'refClass' => 'StoreProductBrand',
             'local' => 'product_brand_id',
             'foreign' => 'store_id'));

        $this->hasMany('StoreProductBrand as store_product_brand_rels', array(
             'local' => 'id',
             'foreign' => 'product_brand_id'));
    }
}