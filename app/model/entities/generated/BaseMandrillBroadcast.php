<?php

/**
 * BaseMandrillBroadcast
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $subject
 * @property clob $text
 * @property integer $recipients_count
 * @property integer $read_count
 * @property integer $link_visited_count
 * @property datetime $sent_date
 * @property enum $type
 * @property Doctrine_Collection $broadcast_links
 * @property Doctrine_Collection $MandrillBroadcastOpen
 * @property Doctrine_Collection $MandrillBroadcastRecipient
 * @property Doctrine_Collection $MandrillBroadcastVisitedLink
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMandrillBroadcast extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('mandrill_broadcast');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('text', 'clob', 65536, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => '65536',
             ));
        $this->hasColumn('recipients_count', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('read_count', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('link_visited_count', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('sent_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pregnancy_week_broadcast',
              1 => 'pregnancy_week_broadcast_single_letter',
              2 => 'sales_in_shop_broadcast',
              3 => 'invite_to_sales_in_shop_broadcast',
              4 => 'recommended_products_broadcast',
              5 => 'invite_to_recommended_products_broadcast',
              6 => 'product_broadcast',
              7 => 'first_year_broadcast',
              8 => 'invite_to_first_year_broadcast_broadcast',
              9 => 'service',
              10 => 'useful_tips_broadcast',
              11 => 'returning_first_broadcast',
              12 => 'returning_second_broadcast',
              13 => 'ty_broadcast',
              14 => 'order_broadcast',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MandrillBroadcastLink as broadcast_links', array(
             'local' => 'id',
             'foreign' => 'broadcast_id'));

        $this->hasMany('MandrillBroadcastOpen', array(
             'local' => 'id',
             'foreign' => 'broadcast_id'));

        $this->hasMany('MandrillBroadcastRecipient', array(
             'local' => 'id',
             'foreign' => 'broadcast_id'));

        $this->hasMany('MandrillBroadcastVisitedLink', array(
             'local' => 'id',
             'foreign' => 'broadcast_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}