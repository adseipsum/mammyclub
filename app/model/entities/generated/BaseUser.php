<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $broadcast_settings
 * @property clob $broadcast_channels
 * @property boolean $newsletter
 * @property boolean $newsletter_shop
 * @property boolean $newsletter_questions
 * @property boolean $newsletter_comments
 * @property boolean $newsletter_recommended_products
 * @property boolean $newsletter_first_year
 * @property boolean $newsletter_useful_tips
 * @property boolean $buys_without_discount
 * @property datetime $email_confirm_date
 * @property boolean $resended_email
 * @property string $name_full
 * @property string $phone
 * @property string $country
 * @property integer $pregnancyweek_id
 * @property integer $pregnancyweek_current_id
 * @property date $pregnancyweek_current_started
 * @property string $login_key
 * @property string $status
 * @property integer $age_of_child
 * @property date $age_of_child_current_started
 * @property date $child_birth_date
 * @property enum $child_sex
 * @property string $child_name
 * @property clob $client_id_ga
 * @property string $inv_channel
 * @property string $inv_channel_src
 * @property string $inv_channel_mdm
 * @property string $inv_channel_cmp
 * @property string $inv_channel_cnt
 * @property string $inv_channel_trm
 * @property integer $image_id
 * @property integer $auth_info_id
 * @property boolean $is_export_to_crm
 * @property PregnancyWeek $pregnancyweek
 * @property PregnancyWeek $pregnancyweek_current
 * @property Image $image
 * @property AuthInfo $auth_info
 * @property Doctrine_Collection $ArticleComment
 * @property Doctrine_Collection $article_rels
 * @property Doctrine_Collection $Author
 * @property Doctrine_Collection $Cart
 * @property Doctrine_Collection $MandrillBroadcastRecipient
 * @property Doctrine_Collection $page_visits
 * @property Doctrine_Collection $PregnancyReview
 * @property Doctrine_Collection $reviews
 * @property Doctrine_Collection $product_broadcast
 * @property Doctrine_Collection $product_broadcast_user_rels
 * @property Doctrine_Collection $Question
 * @property Doctrine_Collection $QuestionComment
 * @property Doctrine_Collection $users
 * @property Doctrine_Collection $ShopComment
 * @property Doctrine_Collection $orders
 * @property Doctrine_Collection $useful_tips_broadcasts
 * @property Doctrine_Collection $useful_tips_broadcast_user_rels
 * @property Doctrine_Collection $UserPregnancyWeek
 * @property Doctrine_Collection $UserSale
 * @property Doctrine_Collection $XBroadcastRecipient
 * @property Doctrine_Collection $XBroadcastSegment
 * @property Doctrine_Collection $broadcast_segment_user_rels
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('broadcast_settings', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('broadcast_channels', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('newsletter', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка',
             ));
        $this->hasColumn('newsletter_shop', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка по акциям',
             ));
        $this->hasColumn('newsletter_questions', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка по ответам на вопросы',
             ));
        $this->hasColumn('newsletter_comments', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка по ответам на комментарии',
             ));
        $this->hasColumn('newsletter_recommended_products', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка по рекомендуемым товарам',
             ));
        $this->hasColumn('newsletter_first_year', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рассылка Первый год жизни',
             ));
        $this->hasColumn('newsletter_useful_tips', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             'msgprop' => 'Рассылка Полезные советы',
             ));
        $this->hasColumn('buys_without_discount', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Покупает без скидки',
             ));
        $this->hasColumn('email_confirm_date', 'datetime', null, array(
             'type' => 'datetime',
             'msgprop' => 'Дата подтверждения Email',
             ));
        $this->hasColumn('resended_email', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('name_full', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'ФИО',
             'length' => '255',
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Телефон',
             'length' => '255',
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Страна',
             'length' => '255',
             ));
        $this->hasColumn('pregnancyweek_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Неделя беременности при подписке',
             'length' => '4',
             ));
        $this->hasColumn('pregnancyweek_current_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Текущая неделя беременности',
             'length' => '4',
             ));
        $this->hasColumn('pregnancyweek_current_started', 'date', null, array(
             'type' => 'date',
             'msgprop' => 'Дата начала текущей недели беременности',
             ));
        $this->hasColumn('login_key', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'default' => 'user',
             'length' => '255',
             ));
        $this->hasColumn('age_of_child', 'integer', 4, array(
             'type' => 'integer',
             'msgprop' => 'Возраст ребенка',
             'length' => '4',
             ));
        $this->hasColumn('age_of_child_current_started', 'date', null, array(
             'type' => 'date',
             'msgprop' => 'Дата начала текущей недели ребенка',
             ));
        $this->hasColumn('child_birth_date', 'date', null, array(
             'type' => 'date',
             'msgprop' => 'Дата рождения ребенка',
             ));
        $this->hasColumn('child_sex', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'm',
              1 => 'f',
             ),
             'msgprop' => 'Пол ребенка',
             ));
        $this->hasColumn('child_name', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Имя ребенка',
             'length' => '255',
             ));
        $this->hasColumn('client_id_ga', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('inv_channel', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inv_channel_src', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inv_channel_mdm', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inv_channel_cmp', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inv_channel_cnt', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inv_channel_trm', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Изображение',
             'length' => '4',
             ));
        $this->hasColumn('auth_info_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('is_export_to_crm', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PregnancyWeek as pregnancyweek', array(
             'local' => 'pregnancyweek_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('PregnancyWeek as pregnancyweek_current', array(
             'local' => 'pregnancyweek_current_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Image as image', array(
             'local' => 'image_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('AuthInfo as auth_info', array(
             'local' => 'auth_info_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('ArticleComment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ArticleUser as article_rels', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Author', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Cart', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('MandrillBroadcastRecipient', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PageVisit as page_visits', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PregnancyReview', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProductComment as reviews', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProductBroadcast as product_broadcast', array(
             'refClass' => 'ProductBroadcastUser',
             'local' => 'user_id',
             'foreign' => 'product_broadcast_id'));

        $this->hasMany('ProductBroadcastUser as product_broadcast_user_rels', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Question', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('QuestionComment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Sale as users', array(
             'refClass' => 'UserSale',
             'local' => 'user_id',
             'foreign' => 'sale_id'));

        $this->hasMany('ShopComment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('SiteOrder as orders', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UsefulTipsBroadcast as useful_tips_broadcasts', array(
             'refClass' => 'UsefulTipsBroadcastUser',
             'local' => 'user_id',
             'foreign' => 'useful_tips_broadcast_id'));

        $this->hasMany('UsefulTipsBroadcastUser as useful_tips_broadcast_user_rels', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserPregnancyWeek', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserSale', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('XBroadcastRecipient', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('XBroadcastSegment', array(
             'refClass' => 'XBroadcastSegmentUser',
             'local' => 'user_id',
             'foreign' => 'broadcast_segment_id'));

        $this->hasMany('XBroadcastSegmentUser as broadcast_segment_user_rels', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}