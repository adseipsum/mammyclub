<?php

/**
 * BaseCartItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cart_id
 * @property integer $product_id
 * @property integer $parameter_group_id
 * @property clob $additional_product_params
 * @property integer $qty
 * @property integer $price
 * @property integer $discount_price
 * @property integer $item_total
 * @property integer $sale_id
 * @property Cart $cart
 * @property Product $product
 * @property ParameterGroup $parameter_group
 * @property Sale $sale
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCartItem extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cart_item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('cart_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Корзина',
             'length' => '4',
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Товар',
             'length' => '4',
             ));
        $this->hasColumn('parameter_group_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Группа параметров товара',
             'length' => '4',
             ));
        $this->hasColumn('additional_product_params', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('qty', 'integer', 4, array(
             'type' => 'integer',
             'default' => 1,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('price', 'integer', 7, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Цена 1 товара',
             'length' => '7',
             ));
        $this->hasColumn('discount_price', 'integer', 7, array(
             'type' => 'integer',
             'default' => 0,
             'msgprop' => 'Акционная цена 1 товара',
             'length' => '7',
             ));
        $this->hasColumn('item_total', 'integer', 7, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Цена 1 позиции в корзине',
             'length' => '7',
             ));
        $this->hasColumn('sale_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Акция',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cart as cart', array(
             'local' => 'cart_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product as product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ParameterGroup as parameter_group', array(
             'local' => 'parameter_group_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Sale as sale', array(
             'local' => 'sale_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));
    }
}