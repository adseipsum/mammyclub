<?php

/**
 * BaseTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $status
 * @property string $error_code
 * @property string $sender_phone
 * @property decimal $amount
 * @property integer $liqpay_transaction_id
 * @property Doctrine_Collection $siteorder
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTransaction extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('transaction');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'success',
              1 => 'failure',
              2 => 'wait_secure',
             ),
             ));
        $this->hasColumn('error_code', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sender_phone', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('amount', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('liqpay_transaction_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('SiteOrder as siteorder', array(
             'local' => 'id',
             'foreign' => 'transaction_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}