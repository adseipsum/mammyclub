<?php

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $page_url
 * @property integer $priority
 * @property integer $sortorder
 * @property string $product_code
 * @property string $bar_code
 * @property integer $standard_store_qty
 * @property string $item_group_id
 * @property integer $price
 * @property string $cost_price
 * @property clob $description
 * @property clob $description_short
 * @property clob $description_short2
 * @property clob $video
 * @property boolean $published
 * @property boolean $not_in_stock
 * @property boolean $templates_ignore
 * @property boolean $zammler
 * @property integer $category_id
 * @property integer $brand_id
 * @property integer $image_id
 * @property integer $header_id
 * @property integer $rating
 * @property integer $comment_count
 * @property boolean $in_stock
 * @property boolean $our_stock
 * @property string $google_product_category
 * @property string $head_section_code
 * @property integer $parameter_link_id
 * @property integer $parameter_value_link_id
 * @property integer $product_params_id
 * @property integer $possible_parameters_id
 * @property integer $count
 * @property datetime $last_revision_date
 * @property Doctrine_Collection $filter_values
 * @property Parameter $parameter_link
 * @property ParameterValue $parameter_value_link
 * @property ProductCategory $category
 * @property ProductBrand $brand
 * @property Image $image
 * @property Doctrine_Collection $images
 * @property Doctrine_Collection $params_images
 * @property Header $header
 * @property ProductParams $params
 * @property ParameterProduct $possible_parameters
 * @property Doctrine_Collection $CartItem
 * @property Doctrine_Collection $first_year_broadcasts1
 * @property Doctrine_Collection $first_year_broadcasts2
 * @property Doctrine_Collection $first_year_broadcasts3
 * @property Doctrine_Collection $first_year_broadcast_product_rels
 * @property Doctrine_Collection $first_year_broadcast_product_boys_rels
 * @property Doctrine_Collection $first_year_broadcast_product_girls_rels
 * @property Doctrine_Collection $parameter_groups
 * @property Doctrine_Collection $parameter_product_links
 * @property Doctrine_Collection $ParameterProductLink
 * @property Doctrine_Collection $pregnancyweeks
 * @property Doctrine_Collection $pregnancyweek_product_rels
 * @property Doctrine_Collection $reviews
 * @property Doctrine_Collection $product_broadcast
 * @property Doctrine_Collection $product_broadcast_product_rels
 * @property Doctrine_Collection $ProductColor
 * @property Doctrine_Collection $product_filtervalue_rels
 * @property Doctrine_Collection $sale_rels
 * @property Doctrine_Collection $recommended_products_broadcasts
 * @property Doctrine_Collection $recommended_products_broadcast_product_rels
 * @property Doctrine_Collection $sales
 * @property Doctrine_Collection $showcases
 * @property Doctrine_Collection $showcase_product_rels
 * @property Doctrine_Collection $SiteOrderItem
 * @property Doctrine_Collection $inventories
 * @property Doctrine_Collection $inventories_parser_setting
 * @property Doctrine_Collection $reserves
 * @property Doctrine_Collection $SupplierRequestProductParameterGroup
 * @property Doctrine_Collection $useful_tips_broadcasts1
 * @property Doctrine_Collection $useful_tips_broadcasts2
 * @property Doctrine_Collection $useful_tips_broadcasts3
 * @property Doctrine_Collection $useful_tips_broadcast_product_rels
 * @property Doctrine_Collection $useful_tips_broadcast_product_boys_rels
 * @property Doctrine_Collection $useful_tips_broadcast_product_girls_rels
 * @property Doctrine_Collection $broadcast_templates
 * @property Doctrine_Collection $broadcast_template_product_rels
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Название',
             'length' => '255',
             ));
        $this->hasColumn('page_url', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'default' => '/продукт/',
             'msgprop' => 'URL-адрес страницы',
             'length' => '255',
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Приоритет',
             'length' => '4',
             ));
        $this->hasColumn('sortorder', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_code', 'string', 20, array(
             'type' => 'string',
             'unique' => true,
             'msgprop' => 'Код товара',
             'length' => '20',
             ));
        $this->hasColumn('bar_code', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Штрих-код',
             'length' => '255',
             ));
        $this->hasColumn('standard_store_qty', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('item_group_id', 'string', 50, array(
             'type' => 'string',
             'msgprop' => 'item_group_id',
             'length' => '50',
             ));
        $this->hasColumn('price', 'integer', 7, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Цена',
             'length' => '7',
             ));
        $this->hasColumn('cost_price', 'string', 50, array(
             'type' => 'string',
             'msgprop' => 'Себестоимость',
             'length' => '50',
             ));
        $this->hasColumn('description', 'clob', 65536, array(
             'type' => 'clob',
             'msgprop' => 'Описание',
             'length' => '65536',
             ));
        $this->hasColumn('description_short', 'clob', 65536, array(
             'type' => 'clob',
             'msgprop' => 'Краткое описание',
             'length' => '65536',
             ));
        $this->hasColumn('description_short2', 'clob', 65536, array(
             'type' => 'clob',
             'msgprop' => 'Краткое описание 2',
             'length' => '65536',
             ));
        $this->hasColumn('video', 'clob', 65536, array(
             'type' => 'clob',
             'msgprop' => 'Видео',
             'length' => '65536',
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             'msgprop' => 'Опубликовано',
             ));
        $this->hasColumn('not_in_stock', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             'msgprop' => 'Нет в наличии',
             ));
        $this->hasColumn('templates_ignore', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Игнорировать шаблоны',
             ));
        $this->hasColumn('zammler', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Zammler',
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Категория',
             'length' => '4',
             ));
        $this->hasColumn('brand_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Бренд',
             'length' => '4',
             ));
        $this->hasColumn('image_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Изображение',
             'length' => '4',
             ));
        $this->hasColumn('header_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('rating', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Рейтинг',
             'length' => '1',
             ));
        $this->hasColumn('comment_count', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => '4',
             ));
        $this->hasColumn('in_stock', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             'msgprop' => 'В наличии',
             ));
        $this->hasColumn('our_stock', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             'msgprop' => 'Наш склад',
             ));
        $this->hasColumn('google_product_category', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'google_product_category',
             'length' => '255',
             ));
        $this->hasColumn('head_section_code', 'string', 10000, array(
             'type' => 'string',
             'msgprop' => 'Код в разделе head',
             'length' => '10000',
             ));
        $this->hasColumn('parameter_link_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('parameter_value_link_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_params_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('possible_parameters_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('count', 'integer', 4, array(
             'type' => 'integer',
             'msgprop' => 'Количество',
             'length' => '4',
             ));
        $this->hasColumn('last_revision_date', 'datetime', null, array(
             'type' => 'datetime',
             'msgprop' => 'Дата сверки',
             ));


        $this->index('name_index', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('page_url_published_index', array(
             'fields' => 
             array(
              0 => 'page_url',
              1 => 'published',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('FilterValue as filter_values', array(
             'refClass' => 'ProductFilterValue',
             'local' => 'product_id',
             'foreign' => 'filter_value_id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Parameter as parameter_link', array(
             'local' => 'parameter_link_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ParameterValue as parameter_value_link', array(
             'local' => 'parameter_value_link_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ProductCategory as category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ProductBrand as brand', array(
             'local' => 'brand_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Image as image', array(
             'local' => 'image_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ProductImage as images', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductParamImage as params_images', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasOne('Header as header', array(
             'local' => 'header_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductParams as params', array(
             'local' => 'product_params_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('ParameterProduct as possible_parameters', array(
             'local' => 'possible_parameters_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('CartItem', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('FirstYearBroadcast as first_year_broadcasts1', array(
             'refClass' => 'FirstYearBroadcastProduct',
             'local' => 'product_id',
             'foreign' => 'first_year_broadcast_id'));

        $this->hasMany('FirstYearBroadcast as first_year_broadcasts2', array(
             'refClass' => 'FirstYearBroadcastProductBoys',
             'local' => 'product_id',
             'foreign' => 'first_year_broadcast_id'));

        $this->hasMany('FirstYearBroadcast as first_year_broadcasts3', array(
             'refClass' => 'FirstYearBroadcastProductGirls',
             'local' => 'product_id',
             'foreign' => 'first_year_broadcast_id'));

        $this->hasMany('FirstYearBroadcastProduct as first_year_broadcast_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('FirstYearBroadcastProductBoys as first_year_broadcast_product_boys_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('FirstYearBroadcastProductGirls as first_year_broadcast_product_girls_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ParameterGroup as parameter_groups', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ParameterProductLink as parameter_product_links', array(
             'local' => 'id',
             'foreign' => 'main_product_id'));

        $this->hasMany('ParameterProductLink', array(
             'local' => 'id',
             'foreign' => 'linked_product_id'));

        $this->hasMany('PregnancyWeek as pregnancyweeks', array(
             'refClass' => 'PregnancyWeekProduct',
             'local' => 'product_id',
             'foreign' => 'pregnancy_week_id'));

        $this->hasMany('PregnancyWeekProduct as pregnancyweek_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductComment as reviews', array(
             'local' => 'id',
             'foreign' => 'entity_id'));

        $this->hasMany('ProductBroadcast as product_broadcast', array(
             'refClass' => 'ProductBroadcastProduct',
             'local' => 'product_id',
             'foreign' => 'product_broadcast_id'));

        $this->hasMany('ProductBroadcastProduct as product_broadcast_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductColor', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductFilterValue as product_filtervalue_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductSale as sale_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('RecommendedProductsBroadcast as recommended_products_broadcasts', array(
             'refClass' => 'RecommendedProductsBroadcastProduct',
             'local' => 'product_id',
             'foreign' => 'recommended_products_broadcast_id'));

        $this->hasMany('RecommendedProductsBroadcastProduct as recommended_products_broadcast_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('Sale as sales', array(
             'refClass' => 'ProductSale',
             'local' => 'product_id',
             'foreign' => 'sale_id'));

        $this->hasMany('Showcase as showcases', array(
             'refClass' => 'ShowcaseProduct',
             'local' => 'product_id',
             'foreign' => 'showcase_id'));

        $this->hasMany('ShowcaseProduct as showcase_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('SiteOrderItem', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('StoreInventory as inventories', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('StoreInventoryParserSetting as inventories_parser_setting', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('StoreReserve as reserves', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('SupplierRequestProductParameterGroup', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('UsefulTipsBroadcast as useful_tips_broadcasts1', array(
             'refClass' => 'UsefulTipsBroadcastProduct',
             'local' => 'product_id',
             'foreign' => 'useful_tips_broadcast_id'));

        $this->hasMany('UsefulTipsBroadcast as useful_tips_broadcasts2', array(
             'refClass' => 'UsefulTipsBroadcastProductBoys',
             'local' => 'product_id',
             'foreign' => 'useful_tips_broadcast_id'));

        $this->hasMany('UsefulTipsBroadcast as useful_tips_broadcasts3', array(
             'refClass' => 'UsefulTipsBroadcastProductGirls',
             'local' => 'product_id',
             'foreign' => 'useful_tips_broadcast_id'));

        $this->hasMany('UsefulTipsBroadcastProduct as useful_tips_broadcast_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('UsefulTipsBroadcastProductBoys as useful_tips_broadcast_product_boys_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('UsefulTipsBroadcastProductGirls as useful_tips_broadcast_product_girls_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('XBroadcastTemplate as broadcast_templates', array(
             'refClass' => 'XBroadcastTemplateProduct',
             'local' => 'product_id',
             'foreign' => 'broadcast_template_id'));

        $this->hasMany('XBroadcastTemplateProduct as broadcast_template_product_rels', array(
             'local' => 'id',
             'foreign' => 'product_id'));
    }
}