<?php

/**
 * BaseXBroadcastTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $subject
 * @property boolean $is_enabled
 * @property boolean $soft_deleted
 * @property boolean $can_be_deleted
 * @property enum $conversion_event
 * @property enum $view_type
 * @property integer $variants_count
 * @property string $utm_source
 * @property integer $send_frequency
 * @property datetime $send_start_from
 * @property clob $products_variants
 * @property date $last_processed
 * @property integer $type_id
 * @property integer $segment_id
 * @property XBroadcastType $type
 * @property XBroadcastSegment $segment
 * @property Doctrine_Collection $products
 * @property Doctrine_Collection $XBroadcast
 * @property Doctrine_Collection $broadcast_template_product_rels
 * @property Doctrine_Collection $sections
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseXBroadcastTemplate extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('x_broadcast_template');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('subject', 'clob', 65536, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => '65536',
             ));
        $this->hasColumn('is_enabled', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('soft_deleted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('can_be_deleted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             ));
        $this->hasColumn('conversion_event', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'buy',
             ),
             ));
        $this->hasColumn('view_type', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'default',
              1 => 'shop',
             ),
             ));
        $this->hasColumn('variants_count', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('utm_source', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('send_frequency', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('send_start_from', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('products_variants', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('last_processed', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('segment_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('XBroadcastType as type', array(
             'local' => 'type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('XBroadcastSegment as segment', array(
             'local' => 'segment_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Product as products', array(
             'refClass' => 'XBroadcastTemplateProduct',
             'local' => 'broadcast_template_id',
             'foreign' => 'product_id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('XBroadcast', array(
             'local' => 'id',
             'foreign' => 'template_id'));

        $this->hasMany('XBroadcastTemplateProduct as broadcast_template_product_rels', array(
             'local' => 'id',
             'foreign' => 'broadcast_template_id'));

        $this->hasMany('XBroadcastTemplateSection as sections', array(
             'local' => 'id',
             'foreign' => 'template_id'));
    }
}