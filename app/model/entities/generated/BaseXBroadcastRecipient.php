<?php

/**
 * BaseXBroadcastRecipient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $mandrill_email_id
 * @property enum $status
 * @property integer $template_variant
 * @property boolean $is_sent
 * @property boolean $is_successfully_sent
 * @property boolean $is_read
 * @property boolean $is_link_visited
 * @property boolean $is_converted
 * @property clob $data
 * @property datetime $sent_date
 * @property integer $user_id
 * @property integer $broadcast_id
 * @property User $user
 * @property XBroadcast $broadcast
 * @property Doctrine_Collection $XBroadcastOpen
 * @property Doctrine_Collection $XBroadcastVisitedLink
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseXBroadcastRecipient extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('x_broadcast_recipient');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('mandrill_email_id', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'created',
              1 => 'in_queue',
              2 => 'sent',
             ),
             'default' => 'created',
             'notnull' => true,
             ));
        $this->hasColumn('template_variant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('is_sent', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('is_successfully_sent', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('is_read', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('is_link_visited', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('is_converted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('data', 'clob', 65536, array(
             'type' => 'clob',
             'notnull' => true,
             'length' => '65536',
             ));
        $this->hasColumn('sent_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('broadcast_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as user', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('XBroadcast as broadcast', array(
             'local' => 'broadcast_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('XBroadcastOpen', array(
             'local' => 'id',
             'foreign' => 'recipient_id'));

        $this->hasMany('XBroadcastVisitedLink', array(
             'local' => 'id',
             'foreign' => 'recipient_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}