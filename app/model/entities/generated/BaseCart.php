<?php

/**
 * BaseCart
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property datetime $created_date
 * @property datetime $updated_date
 * @property decimal $total
 * @property enum $order_status
 * @property integer $siteorder_id
 * @property User $user
 * @property SiteOrder $siteorder
 * @property Doctrine_Collection $items
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCart extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cart');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Пользователь',
             'length' => '4',
             ));
        $this->hasColumn('created_date', 'datetime', null, array(
             'type' => 'datetime',
             'msgprop' => 'Дата создания',
             ));
        $this->hasColumn('updated_date', 'datetime', null, array(
             'type' => 'datetime',
             'msgprop' => 'Дата обновления',
             ));
        $this->hasColumn('total', 'decimal', 7, array(
             'type' => 'decimal',
             'msgprop' => 'Сумма',
             'length' => '7',
             'scale' => '2',
             ));
        $this->hasColumn('order_status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'in_order',
              1 => 'not_in_order',
             ),
             'default' => 'not_in_order',
             'notnull' => true,
             ));
        $this->hasColumn('siteorder_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Заказ',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as user', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('SiteOrder as siteorder', array(
             'local' => 'siteorder_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CartItem as items', array(
             'local' => 'id',
             'foreign' => 'cart_id'));
    }
}