<?php

/**
 * BaseForm
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $title
 * @property string $text
 * @property string $placeholder_text
 * @property enum $type
 * @property integer $timeout
 * @property boolean $published
 * @property string $allowed_sections
 * @property Doctrine_Collection $articles
 * @property Doctrine_Collection $article_categories
 * @property Doctrine_Collection $articlecategory_form_rels
 * @property Doctrine_Collection $article_form_rels
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForm extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('form');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'msgprop' => 'Название (Служебное)',
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'msgprop' => 'Заголовок',
             'length' => '255',
             ));
        $this->hasColumn('text', 'string', 5000, array(
             'type' => 'string',
             'msgprop' => 'Текст формы',
             'length' => '5000',
             ));
        $this->hasColumn('placeholder_text', 'string', 5000, array(
             'type' => 'string',
             'msgprop' => 'Текст в окошке ввода',
             'length' => '5000',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'subscribe',
              1 => 'share',
              2 => 'full_screen',
              3 => 'static_subscribe',
             ),
             ));
        $this->hasColumn('timeout', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Вермя появления формы в секундах',
             'length' => '4',
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             'msgprop' => 'Опубликовано',
             ));
        $this->hasColumn('allowed_sections', 'string', 5000, array(
             'type' => 'string',
             'msgprop' => 'Разделы на которых будут отображаться баннеры',
             'length' => '5000',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Article as articles', array(
             'refClass' => 'ArticleForm',
             'local' => 'form_id',
             'foreign' => 'article_id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ArticleCategory as article_categories', array(
             'refClass' => 'ArticleCategoryForm',
             'local' => 'form_id',
             'foreign' => 'article_category_id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ArticleCategoryForm as articlecategory_form_rels', array(
             'local' => 'id',
             'foreign' => 'form_id'));

        $this->hasMany('ArticleForm as article_form_rels', array(
             'local' => 'id',
             'foreign' => 'form_id'));
    }
}