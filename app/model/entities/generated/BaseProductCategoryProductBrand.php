<?php

/**
 * BaseProductCategoryProductBrand
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_category_id
 * @property integer $product_brand_id
 * @property string $title
 * @property clob $description
 * @property string $header_title
 * @property clob $header_description
 * @property ProductCategory $product_category
 * @property ProductBrand $product_brand
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductCategoryProductBrand extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product_category_product_brand');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_category_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_brand_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
        $this->hasColumn('header_title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('header_description', 'clob', 65536, array(
             'type' => 'clob',
             'length' => '65536',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductCategory as product_category', array(
             'local' => 'product_category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductBrand as product_brand', array(
             'local' => 'product_brand_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}