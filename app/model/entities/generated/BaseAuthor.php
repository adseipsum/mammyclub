<?php

/**
 * BaseAuthor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $google_url
 * @property string $additional_url
 * @property integer $user_id
 * @property User $user
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $PregnancyArticle
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuthor extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('author');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'msgprop' => 'Название',
             'length' => '255',
             ));
        $this->hasColumn('google_url', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Ссылка на Google+',
             'length' => '255',
             ));
        $this->hasColumn('additional_url', 'string', 255, array(
             'type' => 'string',
             'msgprop' => 'Дополнительная ссылка для автора',
             'length' => '255',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'msgprop' => 'Пользователь',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as user', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Article', array(
             'local' => 'id',
             'foreign' => 'author_id'));

        $this->hasMany('PregnancyArticle', array(
             'local' => 'id',
             'foreign' => 'author_id'));
    }
}